function reject_region_communitys() {
    if ((202427, 121, 1) ~ bgp_large_community) && ((202427, 121, pop_region) !~ bgp_large_community) then _reject("Announce only in Europe");
    if ((202427, 121, 2) ~ bgp_large_community) && ((202427, 121, pop_region) !~ bgp_large_community) then _reject("Announce only in North America");
    if ((202427, 111, pop_region) ~ bgp_large_community) then _reject("Do not announce in PoP Region");
}
function reject_country_communitys() {
    if ((202427, 122, 124) ~ bgp_large_community) && ((202427, 122, pop_country) !~ bgp_large_community) then _reject("Announce only in Canada");
    if ((202427, 122, 276) ~ bgp_large_community) && ((202427, 122, pop_country) !~ bgp_large_community) then _reject("Announce only in Germany");
    if ((202427, 122, 380) ~ bgp_large_community) && ((202427, 122, pop_country) !~ bgp_large_community) then _reject("Announce only in Italy");
    if ((202427, 122, 528) ~ bgp_large_community) && ((202427, 122, pop_country) !~ bgp_large_community) then _reject("Announce only in Netherlands");
    if ((202427, 122, 578) ~ bgp_large_community) && ((202427, 122, pop_country) !~ bgp_large_community) then _reject("Announce only in Norway");
    if ((202427, 122, 724) ~ bgp_large_community) && ((202427, 122, pop_country) !~ bgp_large_community) then _reject("Announce only in Spain");
    if ((202427, 122, 756) ~ bgp_large_community) && ((202427, 122, pop_country) !~ bgp_large_community) then _reject("Announce only in Switzerland");
    if ((202427, 122, 840) ~ bgp_large_community) && ((202427, 122, pop_country) !~ bgp_large_community) then _reject("Announce only in United States of America");
    if ((202427, 112, pop_country) ~ bgp_large_community) then _reject("Do not announce in PoP Country");
}
function reject_pop_communitys() {
    if ((202427, 123, 1) ~ bgp_large_community) && ((202427, 123, pop_id) !~ bgp_large_community) then _reject("Announce only at RMA01 CH");
    if ((202427, 123, 2) ~ bgp_large_community) && ((202427, 123, pop_id) !~ bgp_large_community) then _reject("Announce only at FRA01 DE");
    if ((202427, 123, 3) ~ bgp_large_community) && ((202427, 123, pop_id) !~ bgp_large_community) then _reject("Announce only at AMS01 NL");
    if ((202427, 123, 4) ~ bgp_large_community) && ((202427, 123, pop_id) !~ bgp_large_community) then _reject("Announce only at TOR01 CA");
    if ((202427, 123, 5) ~ bgp_large_community) && ((202427, 123, pop_id) !~ bgp_large_community) then _reject("Announce only at MKC01 US");
    if ((202427, 123, 6) ~ bgp_large_community) && ((202427, 123, pop_id) !~ bgp_large_community) then _reject("Announce only at BCN01 ES");
    if ((202427, 123, 7) ~ bgp_large_community) && ((202427, 123, pop_id) !~ bgp_large_community) then _reject("Announce only at OTT01 CA");
    if ((202427, 123, 8) ~ bgp_large_community) && ((202427, 123, pop_id) !~ bgp_large_community) then _reject("Announce only at FNC01 US");
    if ((202427, 123, 9) ~ bgp_large_community) && ((202427, 123, pop_id) !~ bgp_large_community) then _reject("Announce only at RESERVED EU");
    if ((202427, 123, 10) ~ bgp_large_community) && ((202427, 123, pop_id) !~ bgp_large_community) then _reject("Announce only at RESERVED EU");
    if ((202427, 123, 11) ~ bgp_large_community) && ((202427, 123, pop_id) !~ bgp_large_community) then _reject("Announce only at RESERVED EU");
    if ((202427, 123, 12) ~ bgp_large_community) && ((202427, 123, pop_id) !~ bgp_large_community) then _reject("Announce only at RESERVED EU");
    if ((202427, 123, 13) ~ bgp_large_community) && ((202427, 123, pop_id) !~ bgp_large_community) then _reject("Announce only at DUS01 DE");
    if ((202427, 123, 14) ~ bgp_large_community) && ((202427, 123, pop_id) !~ bgp_large_community) then _reject("Announce only at ZRH02 CH");
    if ((202427, 123, 15) ~ bgp_large_community) && ((202427, 123, pop_id) !~ bgp_large_community) then _reject("Announce only at POM01 IT");
    if ((202427, 113, pop_id) ~ bgp_large_community) then _reject("Do not announce at PoP");
}
function prepand_communitys () {
    if ((202427, 130, 1) ~ bgp_large_community) then { 
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 130, *)]);
  }
    if ((202427, 130, 2) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 130, *)]);
  }
    if ((202427, 130, 3) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 130, *)]);
  }
    if ((202427, 141, pop_region) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 141, pop_region)]);
        bgp_large_community.delete([(202427, 142, pop_region)]);
        bgp_large_community.delete([(202427, 143, pop_region)]);
  }
    if ((202427, 142, pop_region) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 141, pop_region)]);
        bgp_large_community.delete([(202427, 142, pop_region)]);
        bgp_large_community.delete([(202427, 143, pop_region)]);
  }
    if ((202427, 143, pop_region) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 141, pop_region)]);
        bgp_large_community.delete([(202427, 142, pop_region)]);
        bgp_large_community.delete([(202427, 143, pop_region)]);
  }
    if ((202427, 151, pop_country) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 151, pop_country)]);
        bgp_large_community.delete([(202427, 152, pop_country)]);
        bgp_large_community.delete([(202427, 153, pop_country)]);
  }
    if ((202427, 152, pop_country) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 151, pop_country)]);
        bgp_large_community.delete([(202427, 152, pop_country)]);
        bgp_large_community.delete([(202427, 153, pop_country)]);
  }
    if ((202427, 153, pop_country) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 151, pop_country)]);
        bgp_large_community.delete([(202427, 152, pop_country)]);
        bgp_large_community.delete([(202427, 153, pop_country)]);
  }
    if ((202427, 161, pop_id) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 161, pop_id)]);
        bgp_large_community.delete([(202427, 162, pop_id)]);
        bgp_large_community.delete([(202427, 163, pop_id)]);
  }
    if ((202427, 162, pop_id) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 161, pop_id)]);
        bgp_large_community.delete([(202427, 162, pop_id)]);
        bgp_large_community.delete([(202427, 163, pop_id)]);
  }
    if ((202427, 163, pop_id) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 161, pop_id)]);
        bgp_large_community.delete([(202427, 162, pop_id)]);
        bgp_large_community.delete([(202427, 163, pop_id)]);
  }
}
function remove_communitys() {
    bgp_large_community.delete([(202427, 101, *)]);
    bgp_large_community.delete([(202427, 102, *)]);
    bgp_large_community.delete([(202427, 103, *)]);
    bgp_large_community.delete([(202427, 104, *)]);
    bgp_large_community.delete([(202427, 105, *)]);
    bgp_large_community.delete([(202427, 106, *)]);
    bgp_large_community.delete([(202427, 107, *)]);
    bgp_large_community.delete([(202427, 109, *)]);
}
function add_on_import() {
    bgp_large_community.add((202427, 102, pop_country));
    bgp_large_community.add((202427, 103, pop_region));
    bgp_large_community.add((202427, 104, pop_id));
}
function add_on_export() {
    bgp_large_community.add((202427, 109, pop_id));
}
function import_communitys(int peer_asn; int import_src) {
    remove_communitys();
    add_on_import();
    bgp_large_community.add((202427, 106, peer_asn));
    bgp_large_community.add((202427, 101, import_src));
}
function export_communitys(int peer_asn) {
    reject_region_communitys();
    reject_country_communitys();
    reject_pop_communitys();
    if ((202427, 110, peer_asn) ~ bgp_large_community) then _reject("Do not announce to AS");
    prepand_communitys();
    add_on_export();
}
function reject_out_of_region() {
    if ! ((202427, 103, pop_region) ~ bgp_large_community) then _reject("Out of Region PoP");
}
