function reject_general(int peer_asn) {
    if ((202427, 110, peer_asn) ~ bgp_large_community) then _reject("Do not announce to AS");
    if ((202427, 111, pop_region) ~ bgp_large_community) then _reject("Do not announce in Region");
    if ((202427, 111, pop_country) ~ bgp_large_community) then _reject("Do not announce in Country");
}
function reject_ix(int ix_id) {
    if ((202427, 112, ix_id) ~ bgp_large_community) then _reject("Do not announce at IX");
}
function process_prepand_general() {
    # Prepand X times
    if ((202427, 120, 1) ~ bgp_large_community) then { 
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 120, *)]);
    }
    if ((202427, 120, 2) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 120, *)]);
    }
    if ((202427, 120, 3) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 120, *)]);
    }
    # Prepand X times in Region
    if ((202427, 131, pop_region) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 131, pop_region)]);
        bgp_large_community.delete([(202427, 132, pop_region)]);
        bgp_large_community.delete([(202427, 133, pop_region)]);
    }
    if ((202427, 132, pop_region) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 131, pop_region)]);
        bgp_large_community.delete([(202427, 132, pop_region)]);
        bgp_large_community.delete([(202427, 133, pop_region)]);
    }
    if ((202427, 133, pop_region) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 131, pop_region)]);
        bgp_large_community.delete([(202427, 132, pop_region)]);
        bgp_large_community.delete([(202427, 133, pop_region)]);
    }
    # Prepand X times in Country
    if ((202427, 131, pop_country) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 131, pop_country)]);
        bgp_large_community.delete([(202427, 132, pop_country)]);
        bgp_large_community.delete([(202427, 133, pop_country)]);
    }
    if ((202427, 132, pop_country) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 131, pop_country)]);
        bgp_large_community.delete([(202427, 132, pop_country)]);
        bgp_large_community.delete([(202427, 133, pop_country)]);
    }
    if ((202427, 133, pop_country) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 131, pop_country)]);
        bgp_large_community.delete([(202427, 132, pop_country)]);
        bgp_large_community.delete([(202427, 133, pop_country)]);
    }
}
function process_prepand_as(int peer_asn) {
    # Prepand X times to AS
    if ((202427, 121, peer_asn) ~ bgp_large_community) then { 
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 121, peer_asn)]);
        bgp_large_community.delete([(202427, 122, peer_asn)]);
        bgp_large_community.delete([(202427, 123, peer_asn)]);
    }
    if ((202427, 122, peer_asn) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 121, peer_asn)]);
        bgp_large_community.delete([(202427, 122, peer_asn)]);
        bgp_large_community.delete([(202427, 123, peer_asn)]);
    }
    if ((202427, 123, peer_asn) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 121, peer_asn)]);
        bgp_large_community.delete([(202427, 122, peer_asn)]);
        bgp_large_community.delete([(202427, 123, peer_asn)]);
    }
}
function process_prepand_ix(int ix_id) {
    if ((202427, 141, ix_id) ~ bgp_large_community) then { 
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 141, ix_id)]);
        bgp_large_community.delete([(202427, 142, ix_id)]);
        bgp_large_community.delete([(202427, 143, ix_id)]);
    }
    if ((202427, 142, ix_id) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 141, ix_id)]);
        bgp_large_community.delete([(202427, 142, ix_id)]);
        bgp_large_community.delete([(202427, 143, ix_id)]);
    }
    if ((202427, 143, ix_id) ~ bgp_large_community) then {
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_path.prepend(202427);
        bgp_large_community.delete([(202427, 141, ix_id)]);
        bgp_large_community.delete([(202427, 142, ix_id)]);
        bgp_large_community.delete([(202427, 143, ix_id)]);
    }
}
function add_rpki_community() {
  if (net.type = NET_IP6) then {
    if (roa_check(rpki6, net, bgp_path.last_nonaggregated) = ROA_VALID) then bgp_large_community.add((202427, 105, 200));
    if (roa_check(rpki6, net, bgp_path.last_nonaggregated) = ROA_UNKNOWN) then bgp_large_community.add((202427, 105, 201));
    if (roa_check(rpki6, net, bgp_path.last_nonaggregated) = ROA_INVALID) then bgp_large_community.add((202427, 105, 202));
  }
}
function remove_information_communitys() {
    bgp_large_community.delete([(202427, 101, *)]);
    bgp_large_community.delete([(202427, 102, *)]);
    bgp_large_community.delete([(202427, 103, *)]);
    bgp_large_community.delete([(202427, 104, *)]);
    bgp_large_community.delete([(202427, 105, *)]);
    bgp_large_community.delete([(202427, 106, *)]);
    bgp_large_community.delete([(202427, 107, *)]);
    bgp_large_community.delete([(202427, 108, *)]);
    bgp_large_community.delete([(202427, 109, *)]);
}
function add_on_import() {
    bgp_large_community.add((202427, 102, pop_country));
    bgp_large_community.add((202427, 102, pop_region));
    bgp_large_community.add((202427, 103, pop_id));
}
function add_on_export() {
    bgp_large_community.add((202427, 109, pop_id));
}
function add_ix_community(int ix_id) {
    bgp_large_community.add((202427, 104, ix_id));
}
function import_communitys(int peer_asn; int import_src_id) {
    remove_information_communitys();
    add_on_import();
    bgp_large_community.add((202427, 106, peer_asn));
    bgp_large_community.add((202427, 101, import_src_id));
}
function export_communitys(int peer_asn) {
    reject_general(peer_asn);
    process_prepand_general();
    process_prepand_as(peer_asn);
    add_on_export();
}
function export_ix_communitys(int ix_id) {
    reject_ix(ix_id);
    process_prepand_ix(ix_id);
}
function export_eu_only() {
    bgp_large_community.add((202427, 111, 3));
}
function reject_out_of_region() {
    if ! ((202427, 102, pop_region) ~ bgp_large_community) then _reject("Out of Region PoP");
}
